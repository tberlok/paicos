name: Build and publish Python package (cibuildwheel)

on:
  push:
    branches:
      - pypi
  release:
    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            arch: x86_64
          # Linux ARM64 (cross-compiled)
          - os: ubuntu-latest
            arch: aarch64
          # macOS x86_64
          - os: macos-latest
            arch: x86_64
          # macOS arm64 (native build)
          - os: macos-latest
            arch: arm64

    steps:
    - uses: actions/checkout@v4

    # QEMU for cross-compiling ARM64 on Linux
    - name: Set up QEMU (for ARM64 builds)
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
        cache-image: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install cibuildwheel
      run: |
        python -m pip install --upgrade pip
        pip install cibuildwheel

    - name: Build wheels
      run: cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
        CIBW_SKIP: pp*
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_BEFORE_BUILD: pip install cython numpy astropy h5py scipy
        # CIBW_TEST_COMMAND: python -m unittest discover -v  # Disabled

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.arch }}
        path: dist/*

  publish_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install packaging tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Install build requirements
      run: pip install cython numpy astropy h5py scipy

    - name: Download wheel artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist

    - name: Build source distribution
      run: python -m build --sdist --outdir dist

    - name: Check all distributions
      run: twine check dist/*

    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
